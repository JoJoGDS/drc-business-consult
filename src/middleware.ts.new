import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'
import { checkAuth } from './lib/django/auth'

// List of public paths that don't require authentication
const publicPaths = [
  '/admin/login',
  '/login',
  '/register',
  '/auth/callback',
  '/api/auth/callback',
  '/_next/static',
  '/_next/image',
  '/favicon.ico',
  '/logo.png',
  '/api/contact',
  '/api/subscribe',
  '/api/reservations',
  '/api/contact',
  '/api/subscribe',
  '/api/reservations',
  '/api/services',
  '/api/team',
  '/api/testimonials'
]

// List of auth paths that should redirect to dashboard if already authenticated
const authPaths = ['/admin/login', '/login', '/register']

// List of admin paths
const adminPaths = ['/admin']

// List of user paths
const userPaths = ['/user']

export async function middleware(req: NextRequest) {
  const res = NextResponse.next()
  const { pathname } = req.nextUrl
  
  // Skip middleware for public paths
  if (publicPaths.some(path => pathname.startsWith(path))) {
    return res
  }

  // Check Django authentication
  const isAuthenticated = await checkAuth(req)

  // If user is not signed in
  if (!isAuthenticated) {
    // Redirect to login if trying to access protected routes
    if (adminPaths.some(path => pathname.startsWith(path))) {
      return NextResponse.redirect(new URL('/admin/login', req.url))
    } else if (userPaths.some(path => pathname.startsWith(path))) {
      return NextResponse.redirect(new URL('/login', req.url))
    }
  } else {
    // If user is signed in
    const userDataCookie = req.cookies.get('userData');
    const userData = userDataCookie ? JSON.parse(userDataCookie.value) : {};
    const role = userData.role || 'user';
    
    // Redirect from auth pages to dashboard if already authenticated
    if (authPaths.some(path => pathname === path)) {
      return NextResponse.redirect(new URL('/user/dashboard', req.url))
    }
    
    // Check access to admin routes
    if (adminPaths.some(path => pathname.startsWith(path)) && role !== 'admin') {
      // Not an admin, redirect to user dashboard
      return NextResponse.redirect(new URL('/user/dashboard', req.url))
    }
  }

  return res
}

export const config = {
  matcher: [
    '/((?!_next/static|_next/image|favicon.ico|api/auth/|auth/callback).*)',
  ],
}
